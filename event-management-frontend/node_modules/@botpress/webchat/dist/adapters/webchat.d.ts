import * as types from './typings';
import { z } from 'zod';
export declare const audioSchema: z.ZodObject<{
    audioUrl: z.ZodString;
    type: z.ZodLiteral<"audio">;
    className: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    type: "audio";
    audioUrl: string;
    className?: string | undefined;
}, {
    type: "audio";
    audioUrl: string;
    className?: string | undefined;
}>;
export declare const cardSchema: z.ZodObject<{
    title: z.ZodString;
    actions: z.ZodArray<z.ZodObject<{
        action: z.ZodEnum<["postback", "url", "say"]>;
        label: z.ZodString;
        value: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        value: string;
        action: "postback" | "url" | "say";
        label: string;
    }, {
        value: string;
        action: "postback" | "url" | "say";
        label: string;
    }>, "many">;
    className: z.ZodOptional<z.ZodString>;
    type: z.ZodLiteral<"card">;
    subtitle: z.ZodOptional<z.ZodString>;
    imageUrl: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    type: "card";
    title: string;
    actions: {
        value: string;
        action: "postback" | "url" | "say";
        label: string;
    }[];
    className?: string | undefined;
    subtitle?: string | undefined;
    imageUrl?: string | undefined;
}, {
    type: "card";
    title: string;
    actions: {
        value: string;
        action: "postback" | "url" | "say";
        label: string;
    }[];
    className?: string | undefined;
    subtitle?: string | undefined;
    imageUrl?: string | undefined;
}>;
export declare const carouselSchema: z.ZodObject<{
    type: z.ZodLiteral<"carousel">;
    className: z.ZodOptional<z.ZodString>;
    items: z.ZodArray<z.ZodObject<Omit<{
        title: z.ZodString;
        actions: z.ZodArray<z.ZodObject<{
            action: z.ZodEnum<["postback", "url", "say"]>;
            label: z.ZodString;
            value: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            value: string;
            action: "postback" | "url" | "say";
            label: string;
        }, {
            value: string;
            action: "postback" | "url" | "say";
            label: string;
        }>, "many">;
        className: z.ZodOptional<z.ZodString>;
        type: z.ZodLiteral<"card">;
        subtitle: z.ZodOptional<z.ZodString>;
        imageUrl: z.ZodOptional<z.ZodString>;
    }, "type">, "strip", z.ZodTypeAny, {
        title: string;
        actions: {
            value: string;
            action: "postback" | "url" | "say";
            label: string;
        }[];
        imageUrl?: string | undefined;
        subtitle?: string | undefined;
        className?: string | undefined;
    }, {
        title: string;
        actions: {
            value: string;
            action: "postback" | "url" | "say";
            label: string;
        }[];
        imageUrl?: string | undefined;
        subtitle?: string | undefined;
        className?: string | undefined;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    type: "carousel";
    items: {
        title: string;
        actions: {
            value: string;
            action: "postback" | "url" | "say";
            label: string;
        }[];
        imageUrl?: string | undefined;
        subtitle?: string | undefined;
        className?: string | undefined;
    }[];
    className?: string | undefined;
}, {
    type: "carousel";
    items: {
        title: string;
        actions: {
            value: string;
            action: "postback" | "url" | "say";
            label: string;
        }[];
        imageUrl?: string | undefined;
        subtitle?: string | undefined;
        className?: string | undefined;
    }[];
    className?: string | undefined;
}>;
export declare const choiceSchema: z.ZodObject<{
    options: z.ZodArray<z.ZodObject<{
        label: z.ZodString;
        value: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        value: string;
        label: string;
    }, {
        value: string;
        label: string;
    }>, "many">;
    type: z.ZodLiteral<"choice">;
    disableFreeText: z.ZodOptional<z.ZodBoolean>;
    className: z.ZodOptional<z.ZodString>;
    text: z.ZodString;
}, "strip", z.ZodTypeAny, {
    type: "choice";
    text: string;
    options: {
        value: string;
        label: string;
    }[];
    disableFreeText?: boolean | undefined;
    className?: string | undefined;
}, {
    type: "choice";
    text: string;
    options: {
        value: string;
        label: string;
    }[];
    disableFreeText?: boolean | undefined;
    className?: string | undefined;
}>;
export declare const dropdownSchema: z.ZodObject<{
    options: z.ZodArray<z.ZodObject<{
        label: z.ZodString;
        value: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        value: string;
        label: string;
    }, {
        value: string;
        label: string;
    }>, "many">;
    type: z.ZodLiteral<"dropdown">;
    className: z.ZodOptional<z.ZodString>;
    text: z.ZodString;
}, "strip", z.ZodTypeAny, {
    type: "dropdown";
    text: string;
    options: {
        value: string;
        label: string;
    }[];
    className?: string | undefined;
}, {
    type: "dropdown";
    text: string;
    options: {
        value: string;
        label: string;
    }[];
    className?: string | undefined;
}>;
export declare const fileSchema: z.ZodObject<{
    fileUrl: z.ZodString;
    title: z.ZodOptional<z.ZodString>;
    type: z.ZodLiteral<"file">;
    className: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    type: "file";
    fileUrl: string;
    title?: string | undefined;
    className?: string | undefined;
}, {
    type: "file";
    fileUrl: string;
    title?: string | undefined;
    className?: string | undefined;
}>;
export declare const imageSchema: z.ZodObject<{
    imageUrl: z.ZodString;
    type: z.ZodLiteral<"image">;
    className: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    type: "image";
    imageUrl: string;
    className?: string | undefined;
}, {
    type: "image";
    imageUrl: string;
    className?: string | undefined;
}>;
export declare const locationSchema: z.ZodObject<{
    title: z.ZodOptional<z.ZodString>;
    latitude: z.ZodNumber;
    longitude: z.ZodNumber;
    address: z.ZodOptional<z.ZodString>;
    type: z.ZodLiteral<"location">;
    className: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    type: "location";
    latitude: number;
    longitude: number;
    title?: string | undefined;
    address?: string | undefined;
    className?: string | undefined;
}, {
    type: "location";
    latitude: number;
    longitude: number;
    title?: string | undefined;
    address?: string | undefined;
    className?: string | undefined;
}>;
export declare const markdownSchema: z.ZodObject<{
    markdown: z.ZodString;
    type: z.ZodLiteral<"markdown">;
    className: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    type: "markdown";
    markdown: string;
    className?: string | undefined;
}, {
    type: "markdown";
    markdown: string;
    className?: string | undefined;
}>;
export declare const textSchema: z.ZodObject<{
    text: z.ZodString;
    type: z.ZodLiteral<"text">;
    className: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    type: "text";
    text: string;
    className?: string | undefined;
}, {
    type: "text";
    text: string;
    className?: string | undefined;
}>;
export declare const videoSchema: z.ZodObject<{
    videoUrl: z.ZodString;
    type: z.ZodLiteral<"video">;
    className: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    type: "video";
    videoUrl: string;
    className?: string | undefined;
}, {
    type: "video";
    videoUrl: string;
    className?: string | undefined;
}>;
export declare const blocSchema: z.ZodObject<{
    items: z.ZodArray<z.ZodDiscriminatedUnion<"type", [z.ZodObject<{
        type: z.ZodLiteral<"text">;
        payload: z.ZodObject<{
            text: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            text: string;
        }, {
            text: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        type: "text";
        payload: {
            text: string;
        };
    }, {
        type: "text";
        payload: {
            text: string;
        };
    }>, z.ZodObject<{
        type: z.ZodLiteral<"markdown">;
        payload: z.ZodObject<{
            markdown: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            markdown: string;
        }, {
            markdown: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        type: "markdown";
        payload: {
            markdown: string;
        };
    }, {
        type: "markdown";
        payload: {
            markdown: string;
        };
    }>, z.ZodObject<{
        type: z.ZodLiteral<"image">;
        payload: z.ZodObject<{
            imageUrl: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            imageUrl: string;
        }, {
            imageUrl: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        type: "image";
        payload: {
            imageUrl: string;
        };
    }, {
        type: "image";
        payload: {
            imageUrl: string;
        };
    }>, z.ZodObject<{
        type: z.ZodLiteral<"audio">;
        payload: z.ZodObject<{
            audioUrl: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            audioUrl: string;
        }, {
            audioUrl: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        type: "audio";
        payload: {
            audioUrl: string;
        };
    }, {
        type: "audio";
        payload: {
            audioUrl: string;
        };
    }>, z.ZodObject<{
        type: z.ZodLiteral<"video">;
        payload: z.ZodObject<{
            videoUrl: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            videoUrl: string;
        }, {
            videoUrl: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        type: "video";
        payload: {
            videoUrl: string;
        };
    }, {
        type: "video";
        payload: {
            videoUrl: string;
        };
    }>, z.ZodObject<{
        type: z.ZodLiteral<"file">;
        payload: z.ZodObject<{
            fileUrl: z.ZodString;
            title: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            fileUrl: string;
            title?: string | undefined;
        }, {
            fileUrl: string;
            title?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        type: "file";
        payload: {
            fileUrl: string;
            title?: string | undefined;
        };
    }, {
        type: "file";
        payload: {
            fileUrl: string;
            title?: string | undefined;
        };
    }>, z.ZodObject<{
        type: z.ZodLiteral<"location">;
        payload: z.ZodObject<{
            latitude: z.ZodNumber;
            longitude: z.ZodNumber;
            address: z.ZodOptional<z.ZodString>;
            title: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            latitude: number;
            longitude: number;
            address?: string | undefined;
            title?: string | undefined;
        }, {
            latitude: number;
            longitude: number;
            address?: string | undefined;
            title?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        type: "location";
        payload: {
            latitude: number;
            longitude: number;
            address?: string | undefined;
            title?: string | undefined;
        };
    }, {
        type: "location";
        payload: {
            latitude: number;
            longitude: number;
            address?: string | undefined;
            title?: string | undefined;
        };
    }>]>, "many">;
    type: z.ZodLiteral<"bloc">;
    className: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    type: "bloc";
    items: ({
        type: "text";
        payload: {
            text: string;
        };
    } | {
        type: "markdown";
        payload: {
            markdown: string;
        };
    } | {
        type: "image";
        payload: {
            imageUrl: string;
        };
    } | {
        type: "audio";
        payload: {
            audioUrl: string;
        };
    } | {
        type: "video";
        payload: {
            videoUrl: string;
        };
    } | {
        type: "file";
        payload: {
            fileUrl: string;
            title?: string | undefined;
        };
    } | {
        type: "location";
        payload: {
            latitude: number;
            longitude: number;
            address?: string | undefined;
            title?: string | undefined;
        };
    })[];
    className?: string | undefined;
}, {
    type: "bloc";
    items: ({
        type: "text";
        payload: {
            text: string;
        };
    } | {
        type: "markdown";
        payload: {
            markdown: string;
        };
    } | {
        type: "image";
        payload: {
            imageUrl: string;
        };
    } | {
        type: "audio";
        payload: {
            audioUrl: string;
        };
    } | {
        type: "video";
        payload: {
            videoUrl: string;
        };
    } | {
        type: "file";
        payload: {
            fileUrl: string;
            title?: string | undefined;
        };
    } | {
        type: "location";
        payload: {
            latitude: number;
            longitude: number;
            address?: string | undefined;
            title?: string | undefined;
        };
    })[];
    className?: string | undefined;
}>;
export declare const messageSchema: z.ZodUnion<[z.ZodObject<{
    audioUrl: z.ZodString;
    type: z.ZodLiteral<"audio">;
    className: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    type: "audio";
    audioUrl: string;
    className?: string | undefined;
}, {
    type: "audio";
    audioUrl: string;
    className?: string | undefined;
}>, z.ZodObject<{
    title: z.ZodString;
    actions: z.ZodArray<z.ZodObject<{
        action: z.ZodEnum<["postback", "url", "say"]>;
        label: z.ZodString;
        value: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        value: string;
        action: "postback" | "url" | "say";
        label: string;
    }, {
        value: string;
        action: "postback" | "url" | "say";
        label: string;
    }>, "many">;
    className: z.ZodOptional<z.ZodString>;
    type: z.ZodLiteral<"card">;
    subtitle: z.ZodOptional<z.ZodString>;
    imageUrl: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    type: "card";
    title: string;
    actions: {
        value: string;
        action: "postback" | "url" | "say";
        label: string;
    }[];
    className?: string | undefined;
    subtitle?: string | undefined;
    imageUrl?: string | undefined;
}, {
    type: "card";
    title: string;
    actions: {
        value: string;
        action: "postback" | "url" | "say";
        label: string;
    }[];
    className?: string | undefined;
    subtitle?: string | undefined;
    imageUrl?: string | undefined;
}>, z.ZodObject<{
    type: z.ZodLiteral<"carousel">;
    className: z.ZodOptional<z.ZodString>;
    items: z.ZodArray<z.ZodObject<Omit<{
        title: z.ZodString;
        actions: z.ZodArray<z.ZodObject<{
            action: z.ZodEnum<["postback", "url", "say"]>;
            label: z.ZodString;
            value: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            value: string;
            action: "postback" | "url" | "say";
            label: string;
        }, {
            value: string;
            action: "postback" | "url" | "say";
            label: string;
        }>, "many">;
        className: z.ZodOptional<z.ZodString>;
        type: z.ZodLiteral<"card">;
        subtitle: z.ZodOptional<z.ZodString>;
        imageUrl: z.ZodOptional<z.ZodString>;
    }, "type">, "strip", z.ZodTypeAny, {
        title: string;
        actions: {
            value: string;
            action: "postback" | "url" | "say";
            label: string;
        }[];
        imageUrl?: string | undefined;
        subtitle?: string | undefined;
        className?: string | undefined;
    }, {
        title: string;
        actions: {
            value: string;
            action: "postback" | "url" | "say";
            label: string;
        }[];
        imageUrl?: string | undefined;
        subtitle?: string | undefined;
        className?: string | undefined;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    type: "carousel";
    items: {
        title: string;
        actions: {
            value: string;
            action: "postback" | "url" | "say";
            label: string;
        }[];
        imageUrl?: string | undefined;
        subtitle?: string | undefined;
        className?: string | undefined;
    }[];
    className?: string | undefined;
}, {
    type: "carousel";
    items: {
        title: string;
        actions: {
            value: string;
            action: "postback" | "url" | "say";
            label: string;
        }[];
        imageUrl?: string | undefined;
        subtitle?: string | undefined;
        className?: string | undefined;
    }[];
    className?: string | undefined;
}>, z.ZodObject<{
    options: z.ZodArray<z.ZodObject<{
        label: z.ZodString;
        value: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        value: string;
        label: string;
    }, {
        value: string;
        label: string;
    }>, "many">;
    type: z.ZodLiteral<"choice">;
    disableFreeText: z.ZodOptional<z.ZodBoolean>;
    className: z.ZodOptional<z.ZodString>;
    text: z.ZodString;
}, "strip", z.ZodTypeAny, {
    type: "choice";
    text: string;
    options: {
        value: string;
        label: string;
    }[];
    disableFreeText?: boolean | undefined;
    className?: string | undefined;
}, {
    type: "choice";
    text: string;
    options: {
        value: string;
        label: string;
    }[];
    disableFreeText?: boolean | undefined;
    className?: string | undefined;
}>, z.ZodObject<{
    options: z.ZodArray<z.ZodObject<{
        label: z.ZodString;
        value: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        value: string;
        label: string;
    }, {
        value: string;
        label: string;
    }>, "many">;
    type: z.ZodLiteral<"dropdown">;
    className: z.ZodOptional<z.ZodString>;
    text: z.ZodString;
}, "strip", z.ZodTypeAny, {
    type: "dropdown";
    text: string;
    options: {
        value: string;
        label: string;
    }[];
    className?: string | undefined;
}, {
    type: "dropdown";
    text: string;
    options: {
        value: string;
        label: string;
    }[];
    className?: string | undefined;
}>, z.ZodObject<{
    fileUrl: z.ZodString;
    title: z.ZodOptional<z.ZodString>;
    type: z.ZodLiteral<"file">;
    className: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    type: "file";
    fileUrl: string;
    title?: string | undefined;
    className?: string | undefined;
}, {
    type: "file";
    fileUrl: string;
    title?: string | undefined;
    className?: string | undefined;
}>, z.ZodObject<{
    imageUrl: z.ZodString;
    type: z.ZodLiteral<"image">;
    className: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    type: "image";
    imageUrl: string;
    className?: string | undefined;
}, {
    type: "image";
    imageUrl: string;
    className?: string | undefined;
}>, z.ZodObject<{
    title: z.ZodOptional<z.ZodString>;
    latitude: z.ZodNumber;
    longitude: z.ZodNumber;
    address: z.ZodOptional<z.ZodString>;
    type: z.ZodLiteral<"location">;
    className: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    type: "location";
    latitude: number;
    longitude: number;
    title?: string | undefined;
    address?: string | undefined;
    className?: string | undefined;
}, {
    type: "location";
    latitude: number;
    longitude: number;
    title?: string | undefined;
    address?: string | undefined;
    className?: string | undefined;
}>, z.ZodObject<{
    markdown: z.ZodString;
    type: z.ZodLiteral<"markdown">;
    className: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    type: "markdown";
    markdown: string;
    className?: string | undefined;
}, {
    type: "markdown";
    markdown: string;
    className?: string | undefined;
}>, z.ZodObject<{
    text: z.ZodString;
    type: z.ZodLiteral<"text">;
    className: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    type: "text";
    text: string;
    className?: string | undefined;
}, {
    type: "text";
    text: string;
    className?: string | undefined;
}>, z.ZodObject<{
    videoUrl: z.ZodString;
    type: z.ZodLiteral<"video">;
    className: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    type: "video";
    videoUrl: string;
    className?: string | undefined;
}, {
    type: "video";
    videoUrl: string;
    className?: string | undefined;
}>, z.ZodObject<{
    items: z.ZodArray<z.ZodDiscriminatedUnion<"type", [z.ZodObject<{
        type: z.ZodLiteral<"text">;
        payload: z.ZodObject<{
            text: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            text: string;
        }, {
            text: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        type: "text";
        payload: {
            text: string;
        };
    }, {
        type: "text";
        payload: {
            text: string;
        };
    }>, z.ZodObject<{
        type: z.ZodLiteral<"markdown">;
        payload: z.ZodObject<{
            markdown: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            markdown: string;
        }, {
            markdown: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        type: "markdown";
        payload: {
            markdown: string;
        };
    }, {
        type: "markdown";
        payload: {
            markdown: string;
        };
    }>, z.ZodObject<{
        type: z.ZodLiteral<"image">;
        payload: z.ZodObject<{
            imageUrl: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            imageUrl: string;
        }, {
            imageUrl: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        type: "image";
        payload: {
            imageUrl: string;
        };
    }, {
        type: "image";
        payload: {
            imageUrl: string;
        };
    }>, z.ZodObject<{
        type: z.ZodLiteral<"audio">;
        payload: z.ZodObject<{
            audioUrl: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            audioUrl: string;
        }, {
            audioUrl: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        type: "audio";
        payload: {
            audioUrl: string;
        };
    }, {
        type: "audio";
        payload: {
            audioUrl: string;
        };
    }>, z.ZodObject<{
        type: z.ZodLiteral<"video">;
        payload: z.ZodObject<{
            videoUrl: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            videoUrl: string;
        }, {
            videoUrl: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        type: "video";
        payload: {
            videoUrl: string;
        };
    }, {
        type: "video";
        payload: {
            videoUrl: string;
        };
    }>, z.ZodObject<{
        type: z.ZodLiteral<"file">;
        payload: z.ZodObject<{
            fileUrl: z.ZodString;
            title: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            fileUrl: string;
            title?: string | undefined;
        }, {
            fileUrl: string;
            title?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        type: "file";
        payload: {
            fileUrl: string;
            title?: string | undefined;
        };
    }, {
        type: "file";
        payload: {
            fileUrl: string;
            title?: string | undefined;
        };
    }>, z.ZodObject<{
        type: z.ZodLiteral<"location">;
        payload: z.ZodObject<{
            latitude: z.ZodNumber;
            longitude: z.ZodNumber;
            address: z.ZodOptional<z.ZodString>;
            title: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            latitude: number;
            longitude: number;
            address?: string | undefined;
            title?: string | undefined;
        }, {
            latitude: number;
            longitude: number;
            address?: string | undefined;
            title?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        type: "location";
        payload: {
            latitude: number;
            longitude: number;
            address?: string | undefined;
            title?: string | undefined;
        };
    }, {
        type: "location";
        payload: {
            latitude: number;
            longitude: number;
            address?: string | undefined;
            title?: string | undefined;
        };
    }>]>, "many">;
    type: z.ZodLiteral<"bloc">;
    className: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    type: "bloc";
    items: ({
        type: "text";
        payload: {
            text: string;
        };
    } | {
        type: "markdown";
        payload: {
            markdown: string;
        };
    } | {
        type: "image";
        payload: {
            imageUrl: string;
        };
    } | {
        type: "audio";
        payload: {
            audioUrl: string;
        };
    } | {
        type: "video";
        payload: {
            videoUrl: string;
        };
    } | {
        type: "file";
        payload: {
            fileUrl: string;
            title?: string | undefined;
        };
    } | {
        type: "location";
        payload: {
            latitude: number;
            longitude: number;
            address?: string | undefined;
            title?: string | undefined;
        };
    })[];
    className?: string | undefined;
}, {
    type: "bloc";
    items: ({
        type: "text";
        payload: {
            text: string;
        };
    } | {
        type: "markdown";
        payload: {
            markdown: string;
        };
    } | {
        type: "image";
        payload: {
            imageUrl: string;
        };
    } | {
        type: "audio";
        payload: {
            audioUrl: string;
        };
    } | {
        type: "video";
        payload: {
            videoUrl: string;
        };
    } | {
        type: "file";
        payload: {
            fileUrl: string;
            title?: string | undefined;
        };
    } | {
        type: "location";
        payload: {
            latitude: number;
            longitude: number;
            address?: string | undefined;
            title?: string | undefined;
        };
    })[];
    className?: string | undefined;
}>]>;
export type Message = z.infer<typeof messageSchema>;
/**
 * ###############
 * ### Signals ###
 * ###############
 */
export declare const webchatVisibilitySchema: z.ZodObject<{
    type: z.ZodLiteral<"webchat_visibility">;
    data: z.ZodObject<{
        visibility: z.ZodUnion<[z.ZodLiteral<"show">, z.ZodLiteral<"hide">, z.ZodLiteral<"toggle">]>;
    }, "strip", z.ZodTypeAny, {
        visibility: "show" | "hide" | "toggle";
    }, {
        visibility: "show" | "hide" | "toggle";
    }>;
}, "strip", z.ZodTypeAny, {
    type: "webchat_visibility";
    data: {
        visibility: "show" | "hide" | "toggle";
    };
}, {
    type: "webchat_visibility";
    data: {
        visibility: "show" | "hide" | "toggle";
    };
}>;
export declare const webchatConfigSchema: z.ZodObject<{
    type: z.ZodLiteral<"webchat_config">;
    data: z.ZodObject<{
        config: z.ZodRecord<z.ZodString, z.ZodAny>;
    }, "strip", z.ZodTypeAny, {
        config: Record<string, any>;
    }, {
        config: Record<string, any>;
    }>;
}, "strip", z.ZodTypeAny, {
    type: "webchat_config";
    data: {
        config: Record<string, any>;
    };
}, {
    type: "webchat_config";
    data: {
        config: Record<string, any>;
    };
}>;
export declare const customSchema: z.ZodObject<{
    type: z.ZodLiteral<"custom">;
    data: z.ZodObject<{
        event: z.ZodRecord<z.ZodString, z.ZodAny>;
    }, "strip", z.ZodTypeAny, {
        event: Record<string, any>;
    }, {
        event: Record<string, any>;
    }>;
}, "strip", z.ZodTypeAny, {
    type: "custom";
    data: {
        event: Record<string, any>;
    };
}, {
    type: "custom";
    data: {
        event: Record<string, any>;
    };
}>;
export declare const triggerSchema: z.ZodUnion<[z.ZodObject<{
    type: z.ZodLiteral<"webchat_visibility">;
    data: z.ZodObject<{
        visibility: z.ZodUnion<[z.ZodLiteral<"show">, z.ZodLiteral<"hide">, z.ZodLiteral<"toggle">]>;
    }, "strip", z.ZodTypeAny, {
        visibility: "show" | "hide" | "toggle";
    }, {
        visibility: "show" | "hide" | "toggle";
    }>;
}, "strip", z.ZodTypeAny, {
    type: "webchat_visibility";
    data: {
        visibility: "show" | "hide" | "toggle";
    };
}, {
    type: "webchat_visibility";
    data: {
        visibility: "show" | "hide" | "toggle";
    };
}>, z.ZodObject<{
    type: z.ZodLiteral<"webchat_config">;
    data: z.ZodObject<{
        config: z.ZodRecord<z.ZodString, z.ZodAny>;
    }, "strip", z.ZodTypeAny, {
        config: Record<string, any>;
    }, {
        config: Record<string, any>;
    }>;
}, "strip", z.ZodTypeAny, {
    type: "webchat_config";
    data: {
        config: Record<string, any>;
    };
}, {
    type: "webchat_config";
    data: {
        config: Record<string, any>;
    };
}>, z.ZodObject<{
    type: z.ZodLiteral<"custom">;
    data: z.ZodObject<{
        event: z.ZodRecord<z.ZodString, z.ZodAny>;
    }, "strip", z.ZodTypeAny, {
        event: Record<string, any>;
    }, {
        event: Record<string, any>;
    }>;
}, "strip", z.ZodTypeAny, {
    type: "custom";
    data: {
        event: Record<string, any>;
    };
}, {
    type: "custom";
    data: {
        event: Record<string, any>;
    };
}>]>;
export type Trigger = z.infer<typeof triggerSchema>;
export declare const triggerSignalSchema: z.ZodUnion<[z.ZodObject<{
    type: z.ZodLiteral<"webchat_visibility">;
    data: z.ZodObject<{
        visibility: z.ZodUnion<[z.ZodLiteral<"show">, z.ZodLiteral<"hide">, z.ZodLiteral<"toggle">]>;
    }, "strip", z.ZodTypeAny, {
        visibility: "show" | "hide" | "toggle";
    }, {
        visibility: "show" | "hide" | "toggle";
    }>;
}, "strip", z.ZodTypeAny, {
    type: "webchat_visibility";
    data: {
        visibility: "show" | "hide" | "toggle";
    };
}, {
    type: "webchat_visibility";
    data: {
        visibility: "show" | "hide" | "toggle";
    };
}>, z.ZodObject<{
    type: z.ZodLiteral<"webchat_config">;
    data: z.ZodObject<{
        config: z.ZodRecord<z.ZodString, z.ZodAny>;
    }, "strip", z.ZodTypeAny, {
        config: Record<string, any>;
    }, {
        config: Record<string, any>;
    }>;
}, "strip", z.ZodTypeAny, {
    type: "webchat_config";
    data: {
        config: Record<string, any>;
    };
}, {
    type: "webchat_config";
    data: {
        config: Record<string, any>;
    };
}>, z.ZodObject<{
    type: z.ZodLiteral<"custom">;
    data: z.ZodObject<{
        event: z.ZodRecord<z.ZodString, z.ZodAny>;
    }, "strip", z.ZodTypeAny, {
        event: Record<string, any>;
    }, {
        event: Record<string, any>;
    }>;
}, "strip", z.ZodTypeAny, {
    type: "custom";
    data: {
        event: Record<string, any>;
    };
}, {
    type: "custom";
    data: {
        event: Record<string, any>;
    };
}>]>;
export declare const messageCreatedSchema: z.ZodObject<{
    type: z.ZodLiteral<"message_created">;
    data: z.ZodUnion<[z.ZodObject<{
        audioUrl: z.ZodString;
        type: z.ZodLiteral<"audio">;
        className: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        type: "audio";
        audioUrl: string;
        className?: string | undefined;
    }, {
        type: "audio";
        audioUrl: string;
        className?: string | undefined;
    }>, z.ZodObject<{
        title: z.ZodString;
        actions: z.ZodArray<z.ZodObject<{
            action: z.ZodEnum<["postback", "url", "say"]>;
            label: z.ZodString;
            value: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            value: string;
            action: "postback" | "url" | "say";
            label: string;
        }, {
            value: string;
            action: "postback" | "url" | "say";
            label: string;
        }>, "many">;
        className: z.ZodOptional<z.ZodString>;
        type: z.ZodLiteral<"card">;
        subtitle: z.ZodOptional<z.ZodString>;
        imageUrl: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        type: "card";
        title: string;
        actions: {
            value: string;
            action: "postback" | "url" | "say";
            label: string;
        }[];
        className?: string | undefined;
        subtitle?: string | undefined;
        imageUrl?: string | undefined;
    }, {
        type: "card";
        title: string;
        actions: {
            value: string;
            action: "postback" | "url" | "say";
            label: string;
        }[];
        className?: string | undefined;
        subtitle?: string | undefined;
        imageUrl?: string | undefined;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"carousel">;
        className: z.ZodOptional<z.ZodString>;
        items: z.ZodArray<z.ZodObject<Omit<{
            title: z.ZodString;
            actions: z.ZodArray<z.ZodObject<{
                action: z.ZodEnum<["postback", "url", "say"]>;
                label: z.ZodString;
                value: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                value: string;
                action: "postback" | "url" | "say";
                label: string;
            }, {
                value: string;
                action: "postback" | "url" | "say";
                label: string;
            }>, "many">;
            className: z.ZodOptional<z.ZodString>;
            type: z.ZodLiteral<"card">;
            subtitle: z.ZodOptional<z.ZodString>;
            imageUrl: z.ZodOptional<z.ZodString>;
        }, "type">, "strip", z.ZodTypeAny, {
            title: string;
            actions: {
                value: string;
                action: "postback" | "url" | "say";
                label: string;
            }[];
            imageUrl?: string | undefined;
            subtitle?: string | undefined;
            className?: string | undefined;
        }, {
            title: string;
            actions: {
                value: string;
                action: "postback" | "url" | "say";
                label: string;
            }[];
            imageUrl?: string | undefined;
            subtitle?: string | undefined;
            className?: string | undefined;
        }>, "many">;
    }, "strip", z.ZodTypeAny, {
        type: "carousel";
        items: {
            title: string;
            actions: {
                value: string;
                action: "postback" | "url" | "say";
                label: string;
            }[];
            imageUrl?: string | undefined;
            subtitle?: string | undefined;
            className?: string | undefined;
        }[];
        className?: string | undefined;
    }, {
        type: "carousel";
        items: {
            title: string;
            actions: {
                value: string;
                action: "postback" | "url" | "say";
                label: string;
            }[];
            imageUrl?: string | undefined;
            subtitle?: string | undefined;
            className?: string | undefined;
        }[];
        className?: string | undefined;
    }>, z.ZodObject<{
        options: z.ZodArray<z.ZodObject<{
            label: z.ZodString;
            value: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            value: string;
            label: string;
        }, {
            value: string;
            label: string;
        }>, "many">;
        type: z.ZodLiteral<"choice">;
        disableFreeText: z.ZodOptional<z.ZodBoolean>;
        className: z.ZodOptional<z.ZodString>;
        text: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        type: "choice";
        text: string;
        options: {
            value: string;
            label: string;
        }[];
        disableFreeText?: boolean | undefined;
        className?: string | undefined;
    }, {
        type: "choice";
        text: string;
        options: {
            value: string;
            label: string;
        }[];
        disableFreeText?: boolean | undefined;
        className?: string | undefined;
    }>, z.ZodObject<{
        options: z.ZodArray<z.ZodObject<{
            label: z.ZodString;
            value: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            value: string;
            label: string;
        }, {
            value: string;
            label: string;
        }>, "many">;
        type: z.ZodLiteral<"dropdown">;
        className: z.ZodOptional<z.ZodString>;
        text: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        type: "dropdown";
        text: string;
        options: {
            value: string;
            label: string;
        }[];
        className?: string | undefined;
    }, {
        type: "dropdown";
        text: string;
        options: {
            value: string;
            label: string;
        }[];
        className?: string | undefined;
    }>, z.ZodObject<{
        fileUrl: z.ZodString;
        title: z.ZodOptional<z.ZodString>;
        type: z.ZodLiteral<"file">;
        className: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        type: "file";
        fileUrl: string;
        title?: string | undefined;
        className?: string | undefined;
    }, {
        type: "file";
        fileUrl: string;
        title?: string | undefined;
        className?: string | undefined;
    }>, z.ZodObject<{
        imageUrl: z.ZodString;
        type: z.ZodLiteral<"image">;
        className: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        type: "image";
        imageUrl: string;
        className?: string | undefined;
    }, {
        type: "image";
        imageUrl: string;
        className?: string | undefined;
    }>, z.ZodObject<{
        title: z.ZodOptional<z.ZodString>;
        latitude: z.ZodNumber;
        longitude: z.ZodNumber;
        address: z.ZodOptional<z.ZodString>;
        type: z.ZodLiteral<"location">;
        className: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        type: "location";
        latitude: number;
        longitude: number;
        title?: string | undefined;
        address?: string | undefined;
        className?: string | undefined;
    }, {
        type: "location";
        latitude: number;
        longitude: number;
        title?: string | undefined;
        address?: string | undefined;
        className?: string | undefined;
    }>, z.ZodObject<{
        markdown: z.ZodString;
        type: z.ZodLiteral<"markdown">;
        className: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        type: "markdown";
        markdown: string;
        className?: string | undefined;
    }, {
        type: "markdown";
        markdown: string;
        className?: string | undefined;
    }>, z.ZodObject<{
        text: z.ZodString;
        type: z.ZodLiteral<"text">;
        className: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        type: "text";
        text: string;
        className?: string | undefined;
    }, {
        type: "text";
        text: string;
        className?: string | undefined;
    }>, z.ZodObject<{
        videoUrl: z.ZodString;
        type: z.ZodLiteral<"video">;
        className: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        type: "video";
        videoUrl: string;
        className?: string | undefined;
    }, {
        type: "video";
        videoUrl: string;
        className?: string | undefined;
    }>, z.ZodObject<{
        items: z.ZodArray<z.ZodDiscriminatedUnion<"type", [z.ZodObject<{
            type: z.ZodLiteral<"text">;
            payload: z.ZodObject<{
                text: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                text: string;
            }, {
                text: string;
            }>;
        }, "strip", z.ZodTypeAny, {
            type: "text";
            payload: {
                text: string;
            };
        }, {
            type: "text";
            payload: {
                text: string;
            };
        }>, z.ZodObject<{
            type: z.ZodLiteral<"markdown">;
            payload: z.ZodObject<{
                markdown: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                markdown: string;
            }, {
                markdown: string;
            }>;
        }, "strip", z.ZodTypeAny, {
            type: "markdown";
            payload: {
                markdown: string;
            };
        }, {
            type: "markdown";
            payload: {
                markdown: string;
            };
        }>, z.ZodObject<{
            type: z.ZodLiteral<"image">;
            payload: z.ZodObject<{
                imageUrl: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                imageUrl: string;
            }, {
                imageUrl: string;
            }>;
        }, "strip", z.ZodTypeAny, {
            type: "image";
            payload: {
                imageUrl: string;
            };
        }, {
            type: "image";
            payload: {
                imageUrl: string;
            };
        }>, z.ZodObject<{
            type: z.ZodLiteral<"audio">;
            payload: z.ZodObject<{
                audioUrl: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                audioUrl: string;
            }, {
                audioUrl: string;
            }>;
        }, "strip", z.ZodTypeAny, {
            type: "audio";
            payload: {
                audioUrl: string;
            };
        }, {
            type: "audio";
            payload: {
                audioUrl: string;
            };
        }>, z.ZodObject<{
            type: z.ZodLiteral<"video">;
            payload: z.ZodObject<{
                videoUrl: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                videoUrl: string;
            }, {
                videoUrl: string;
            }>;
        }, "strip", z.ZodTypeAny, {
            type: "video";
            payload: {
                videoUrl: string;
            };
        }, {
            type: "video";
            payload: {
                videoUrl: string;
            };
        }>, z.ZodObject<{
            type: z.ZodLiteral<"file">;
            payload: z.ZodObject<{
                fileUrl: z.ZodString;
                title: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                fileUrl: string;
                title?: string | undefined;
            }, {
                fileUrl: string;
                title?: string | undefined;
            }>;
        }, "strip", z.ZodTypeAny, {
            type: "file";
            payload: {
                fileUrl: string;
                title?: string | undefined;
            };
        }, {
            type: "file";
            payload: {
                fileUrl: string;
                title?: string | undefined;
            };
        }>, z.ZodObject<{
            type: z.ZodLiteral<"location">;
            payload: z.ZodObject<{
                latitude: z.ZodNumber;
                longitude: z.ZodNumber;
                address: z.ZodOptional<z.ZodString>;
                title: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                latitude: number;
                longitude: number;
                address?: string | undefined;
                title?: string | undefined;
            }, {
                latitude: number;
                longitude: number;
                address?: string | undefined;
                title?: string | undefined;
            }>;
        }, "strip", z.ZodTypeAny, {
            type: "location";
            payload: {
                latitude: number;
                longitude: number;
                address?: string | undefined;
                title?: string | undefined;
            };
        }, {
            type: "location";
            payload: {
                latitude: number;
                longitude: number;
                address?: string | undefined;
                title?: string | undefined;
            };
        }>]>, "many">;
        type: z.ZodLiteral<"bloc">;
        className: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        type: "bloc";
        items: ({
            type: "text";
            payload: {
                text: string;
            };
        } | {
            type: "markdown";
            payload: {
                markdown: string;
            };
        } | {
            type: "image";
            payload: {
                imageUrl: string;
            };
        } | {
            type: "audio";
            payload: {
                audioUrl: string;
            };
        } | {
            type: "video";
            payload: {
                videoUrl: string;
            };
        } | {
            type: "file";
            payload: {
                fileUrl: string;
                title?: string | undefined;
            };
        } | {
            type: "location";
            payload: {
                latitude: number;
                longitude: number;
                address?: string | undefined;
                title?: string | undefined;
            };
        })[];
        className?: string | undefined;
    }, {
        type: "bloc";
        items: ({
            type: "text";
            payload: {
                text: string;
            };
        } | {
            type: "markdown";
            payload: {
                markdown: string;
            };
        } | {
            type: "image";
            payload: {
                imageUrl: string;
            };
        } | {
            type: "audio";
            payload: {
                audioUrl: string;
            };
        } | {
            type: "video";
            payload: {
                videoUrl: string;
            };
        } | {
            type: "file";
            payload: {
                fileUrl: string;
                title?: string | undefined;
            };
        } | {
            type: "location";
            payload: {
                latitude: number;
                longitude: number;
                address?: string | undefined;
                title?: string | undefined;
            };
        })[];
        className?: string | undefined;
    }>]>;
}, "strip", z.ZodTypeAny, {
    type: "message_created";
    data: {
        type: "audio";
        audioUrl: string;
        className?: string | undefined;
    } | {
        type: "card";
        title: string;
        actions: {
            value: string;
            action: "postback" | "url" | "say";
            label: string;
        }[];
        className?: string | undefined;
        subtitle?: string | undefined;
        imageUrl?: string | undefined;
    } | {
        type: "carousel";
        items: {
            title: string;
            actions: {
                value: string;
                action: "postback" | "url" | "say";
                label: string;
            }[];
            imageUrl?: string | undefined;
            subtitle?: string | undefined;
            className?: string | undefined;
        }[];
        className?: string | undefined;
    } | {
        type: "choice";
        text: string;
        options: {
            value: string;
            label: string;
        }[];
        disableFreeText?: boolean | undefined;
        className?: string | undefined;
    } | {
        type: "dropdown";
        text: string;
        options: {
            value: string;
            label: string;
        }[];
        className?: string | undefined;
    } | {
        type: "file";
        fileUrl: string;
        title?: string | undefined;
        className?: string | undefined;
    } | {
        type: "image";
        imageUrl: string;
        className?: string | undefined;
    } | {
        type: "location";
        latitude: number;
        longitude: number;
        title?: string | undefined;
        address?: string | undefined;
        className?: string | undefined;
    } | {
        type: "markdown";
        markdown: string;
        className?: string | undefined;
    } | {
        type: "text";
        text: string;
        className?: string | undefined;
    } | {
        type: "video";
        videoUrl: string;
        className?: string | undefined;
    } | {
        type: "bloc";
        items: ({
            type: "text";
            payload: {
                text: string;
            };
        } | {
            type: "markdown";
            payload: {
                markdown: string;
            };
        } | {
            type: "image";
            payload: {
                imageUrl: string;
            };
        } | {
            type: "audio";
            payload: {
                audioUrl: string;
            };
        } | {
            type: "video";
            payload: {
                videoUrl: string;
            };
        } | {
            type: "file";
            payload: {
                fileUrl: string;
                title?: string | undefined;
            };
        } | {
            type: "location";
            payload: {
                latitude: number;
                longitude: number;
                address?: string | undefined;
                title?: string | undefined;
            };
        })[];
        className?: string | undefined;
    };
}, {
    type: "message_created";
    data: {
        type: "audio";
        audioUrl: string;
        className?: string | undefined;
    } | {
        type: "card";
        title: string;
        actions: {
            value: string;
            action: "postback" | "url" | "say";
            label: string;
        }[];
        className?: string | undefined;
        subtitle?: string | undefined;
        imageUrl?: string | undefined;
    } | {
        type: "carousel";
        items: {
            title: string;
            actions: {
                value: string;
                action: "postback" | "url" | "say";
                label: string;
            }[];
            imageUrl?: string | undefined;
            subtitle?: string | undefined;
            className?: string | undefined;
        }[];
        className?: string | undefined;
    } | {
        type: "choice";
        text: string;
        options: {
            value: string;
            label: string;
        }[];
        disableFreeText?: boolean | undefined;
        className?: string | undefined;
    } | {
        type: "dropdown";
        text: string;
        options: {
            value: string;
            label: string;
        }[];
        className?: string | undefined;
    } | {
        type: "file";
        fileUrl: string;
        title?: string | undefined;
        className?: string | undefined;
    } | {
        type: "image";
        imageUrl: string;
        className?: string | undefined;
    } | {
        type: "location";
        latitude: number;
        longitude: number;
        title?: string | undefined;
        address?: string | undefined;
        className?: string | undefined;
    } | {
        type: "markdown";
        markdown: string;
        className?: string | undefined;
    } | {
        type: "text";
        text: string;
        className?: string | undefined;
    } | {
        type: "video";
        videoUrl: string;
        className?: string | undefined;
    } | {
        type: "bloc";
        items: ({
            type: "text";
            payload: {
                text: string;
            };
        } | {
            type: "markdown";
            payload: {
                markdown: string;
            };
        } | {
            type: "image";
            payload: {
                imageUrl: string;
            };
        } | {
            type: "audio";
            payload: {
                audioUrl: string;
            };
        } | {
            type: "video";
            payload: {
                videoUrl: string;
            };
        } | {
            type: "file";
            payload: {
                fileUrl: string;
                title?: string | undefined;
            };
        } | {
            type: "location";
            payload: {
                latitude: number;
                longitude: number;
                address?: string | undefined;
                title?: string | undefined;
            };
        })[];
        className?: string | undefined;
    };
}>;
export type Signal = z.infer<typeof triggerSignalSchema> | z.infer<typeof messageCreatedSchema>;
export type Messages = types.MessagesOf<Message>;
export type Triggers = types.MessagesOf<Trigger>;
