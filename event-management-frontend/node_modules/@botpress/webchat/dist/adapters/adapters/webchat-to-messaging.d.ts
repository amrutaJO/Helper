import * as webchat from '../webchat';
import * as messaging from '../messaging';
import * as types from '../typings';
export type WebChatToMessagingMessageAdapters = types.Adapter<webchat.Messages, messaging.Messages>;
export type WebChatToMessagingTriggerAdapters = types.Adapter<webchat.Triggers, messaging.Triggers>;
export declare const audioAdapter: (x: {
    type: "audio";
    audioUrl: string;
    className?: string | undefined;
}) => {
    type: "audio";
    audio: string;
    audioUrl: string;
    className?: string | undefined;
};
export declare const cardAdapter: (x: {
    type: "card";
    title: string;
    actions: {
        value: string;
        action: "postback" | "url" | "say";
        label: string;
    }[];
    className?: string | undefined;
    subtitle?: string | undefined;
    imageUrl?: string | undefined;
}) => {
    type: "card";
    title: string;
    actions: ({
        text: string;
        title: string;
        action: "Say something";
    } | {
        title: string;
        action: "Open URL";
        url: string;
    } | {
        title: string;
        action: "Postback";
        payload: string;
    })[];
    className?: string | undefined;
    avatarUrl?: string | undefined;
    subtitle?: string | undefined;
    image?: string | undefined;
};
export declare const carouselAdapter: (x: {
    type: "carousel";
    items: {
        title: string;
        actions: {
            value: string;
            action: "postback" | "url" | "say";
            label: string;
        }[];
        imageUrl?: string | undefined;
        subtitle?: string | undefined;
        className?: string | undefined;
    }[];
    className?: string | undefined;
}) => {
    type: "carousel";
    items: {
        type: "card";
        title: string;
        actions: ({
            text: string;
            title: string;
            action: "Say something";
        } | {
            title: string;
            action: "Open URL";
            url: string;
        } | {
            title: string;
            action: "Postback";
            payload: string;
        })[];
        className?: string | undefined;
        avatarUrl?: string | undefined;
        subtitle?: string | undefined;
        image?: string | undefined;
    }[];
    className?: string | undefined;
};
export declare const choiceAdapter: (x: {
    type: "choice";
    text: string;
    options: {
        value: string;
        label: string;
    }[];
    disableFreeText?: boolean | undefined;
    className?: string | undefined;
}) => {
    type: "single-choice";
    text: string;
    choices: {
        title: string;
        value: string;
    }[];
    disableFreeText: boolean | undefined;
    options: {
        value: string;
        label: string;
    }[];
    className?: string | undefined;
};
export declare const dropdownAdapter: (x: {
    type: "dropdown";
    text: string;
    options: {
        value: string;
        label: string;
    }[];
    className?: string | undefined;
}) => {
    type: "dropdown";
    message: string;
    options: {
        label: string;
        value: string;
    }[];
    text: string;
    className?: string | undefined;
};
export declare const fileAdapter: (x: {
    type: "file";
    fileUrl: string;
    title?: string | undefined;
    className?: string | undefined;
}) => {
    type: "file";
    file: string;
    title: string | undefined;
    fileUrl: string;
    className?: string | undefined;
};
export declare const imageAdapter: (x: {
    type: "image";
    imageUrl: string;
    className?: string | undefined;
}) => {
    type: "image";
    image: string;
    imageUrl: string;
    className?: string | undefined;
};
export declare const locationAdapter: (x: {
    type: "location";
    latitude: number;
    longitude: number;
    title?: string | undefined;
    address?: string | undefined;
    className?: string | undefined;
}) => {
    type: "location";
    latitude: number;
    longitude: number;
    title?: string | undefined;
    address?: string | undefined;
    className?: string | undefined;
};
export declare const markdownAdapter: (x: {
    type: "markdown";
    markdown: string;
    className?: string | undefined;
}) => {
    type: "text";
    text: string;
    markdown: true;
    className?: string | undefined;
};
export declare const textAdapter: (x: {
    type: "text";
    text: string;
    className?: string | undefined;
}) => {
    type: "text";
    text: string;
    markdown: true;
    className?: string | undefined;
};
export declare const videoAdapter: (x: {
    type: "video";
    videoUrl: string;
    className?: string | undefined;
}) => {
    type: "video";
    video: string;
    videoUrl: string;
    className?: string | undefined;
};
export declare const messageAdapter: (message: webchat.Message) => messaging.Message;
export declare const webchatVisibilityAdapter: (x: {
    type: "webchat_visibility";
    data: {
        visibility: "show" | "hide" | "toggle";
    };
}) => {
    type: "webchat-visibility";
    visibility: "show" | "hide" | "toggle";
};
export declare const webchatConfigAdapter: (x: {
    type: "webchat_config";
    data: {
        config: Record<string, any>;
    };
}) => {
    type: "webchat-config";
    config: Record<string, any>;
};
export declare const customAdapter: (x: {
    type: "custom";
    data: {
        event: Record<string, any>;
    };
}) => {
    type: "custom-event";
    event: Record<string, any>;
};
export declare const triggerAdapter: (trigger: webchat.Trigger) => messaging.Trigger;
