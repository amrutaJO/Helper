'use strict';
const core = require('@twind/core');
module.exports = // indirection wrapper to remove autocomplete functions from production bundles
function() {
    return {
        theme: {
            containers: {
                xs: '20rem',
                sm: '24rem',
                md: '28rem',
                lg: '32rem',
                xl: '36rem',
                '2xl': '42rem',
                '3xl': '48rem',
                '4xl': '56rem',
                '5xl': '64rem',
                '6xl': '72rem',
                '7xl': '80rem'
            }
        },
        rules: [
            [
                '@container($|-|\\/)',
                ({ 1: $1 , $$  }, context)=>{
                    // eslint-disable-next-line no-sparse-arrays
                    let [value = '', name] = '/' == $1 ? [
                        ,
                        $$
                    ] : core.parseValue($$), type = core.arbitrary(value, '', context) || value || 'inline-size';
                    return name ? {
                        container: `${name} / ${type}`
                    } : {
                        'container-type': type
                    };
                }
            ]
        ],
        // we get called 3 times ('', '-', '/') - only answer once
        variants: [
            [
                '@(.+)',
                (match, context)=>{
                    let [value, name] = core.parseValue(match[1]);
                    if (value) {
                        let minWidth = context.theme('containers', value) || core.arbitrary(value, 'containers', context);
                        return minWidth && `@container ${name ? name + ' ' : ''}(min-width:${minWidth})`;
                    }
                }
            ]
        ]
    };
};
//# sourceMappingURL=preset-container-queries.cjs.map
